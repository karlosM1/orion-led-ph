/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as LandingStockImport } from './routes/landing/stock'
import { Route as LandingContactImport } from './routes/landing/contact'
import { Route as LandingAboutImport } from './routes/landing/about'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LandingStockRoute = LandingStockImport.update({
  id: '/landing/stock',
  path: '/landing/stock',
  getParentRoute: () => rootRoute,
} as any)

const LandingContactRoute = LandingContactImport.update({
  id: '/landing/contact',
  path: '/landing/contact',
  getParentRoute: () => rootRoute,
} as any)

const LandingAboutRoute = LandingAboutImport.update({
  id: '/landing/about',
  path: '/landing/about',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/landing/about': {
      id: '/landing/about'
      path: '/landing/about'
      fullPath: '/landing/about'
      preLoaderRoute: typeof LandingAboutImport
      parentRoute: typeof rootRoute
    }
    '/landing/contact': {
      id: '/landing/contact'
      path: '/landing/contact'
      fullPath: '/landing/contact'
      preLoaderRoute: typeof LandingContactImport
      parentRoute: typeof rootRoute
    }
    '/landing/stock': {
      id: '/landing/stock'
      path: '/landing/stock'
      fullPath: '/landing/stock'
      preLoaderRoute: typeof LandingStockImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/landing/about': typeof LandingAboutRoute
  '/landing/contact': typeof LandingContactRoute
  '/landing/stock': typeof LandingStockRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/landing/about': typeof LandingAboutRoute
  '/landing/contact': typeof LandingContactRoute
  '/landing/stock': typeof LandingStockRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/landing/about': typeof LandingAboutRoute
  '/landing/contact': typeof LandingContactRoute
  '/landing/stock': typeof LandingStockRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/landing/about' | '/landing/contact' | '/landing/stock'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/landing/about' | '/landing/contact' | '/landing/stock'
  id:
    | '__root__'
    | '/'
    | '/landing/about'
    | '/landing/contact'
    | '/landing/stock'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LandingAboutRoute: typeof LandingAboutRoute
  LandingContactRoute: typeof LandingContactRoute
  LandingStockRoute: typeof LandingStockRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LandingAboutRoute: LandingAboutRoute,
  LandingContactRoute: LandingContactRoute,
  LandingStockRoute: LandingStockRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/landing/about",
        "/landing/contact",
        "/landing/stock"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/landing/about": {
      "filePath": "landing/about.tsx"
    },
    "/landing/contact": {
      "filePath": "landing/contact.tsx"
    },
    "/landing/stock": {
      "filePath": "landing/stock.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
