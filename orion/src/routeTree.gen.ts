/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as CheckoutImport } from './routes/checkout'
import { Route as CartImport } from './routes/cart'
import { Route as IndexImport } from './routes/index'
import { Route as StockIndexImport } from './routes/stock/index'
import { Route as StockProductIdImport } from './routes/stock/$productId'
import { Route as LandingStockImport } from './routes/landing/stock'
import { Route as LandingContactImport } from './routes/landing/contact'
import { Route as LandingAboutImport } from './routes/landing/about'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthSigninImport } from './routes/auth/signin'

// Create/Update Routes

const CheckoutRoute = CheckoutImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => rootRoute,
} as any)

const CartRoute = CartImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StockIndexRoute = StockIndexImport.update({
  id: '/stock/',
  path: '/stock/',
  getParentRoute: () => rootRoute,
} as any)

const StockProductIdRoute = StockProductIdImport.update({
  id: '/stock/$productId',
  path: '/stock/$productId',
  getParentRoute: () => rootRoute,
} as any)

const LandingStockRoute = LandingStockImport.update({
  id: '/landing/stock',
  path: '/landing/stock',
  getParentRoute: () => rootRoute,
} as any)

const LandingContactRoute = LandingContactImport.update({
  id: '/landing/contact',
  path: '/landing/contact',
  getParentRoute: () => rootRoute,
} as any)

const LandingAboutRoute = LandingAboutImport.update({
  id: '/landing/about',
  path: '/landing/about',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthSigninRoute = AuthSigninImport.update({
  id: '/auth/signin',
  path: '/auth/signin',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartImport
      parentRoute: typeof rootRoute
    }
    '/checkout': {
      id: '/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutImport
      parentRoute: typeof rootRoute
    }
    '/auth/signin': {
      id: '/auth/signin'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/landing/about': {
      id: '/landing/about'
      path: '/landing/about'
      fullPath: '/landing/about'
      preLoaderRoute: typeof LandingAboutImport
      parentRoute: typeof rootRoute
    }
    '/landing/contact': {
      id: '/landing/contact'
      path: '/landing/contact'
      fullPath: '/landing/contact'
      preLoaderRoute: typeof LandingContactImport
      parentRoute: typeof rootRoute
    }
    '/landing/stock': {
      id: '/landing/stock'
      path: '/landing/stock'
      fullPath: '/landing/stock'
      preLoaderRoute: typeof LandingStockImport
      parentRoute: typeof rootRoute
    }
    '/stock/$productId': {
      id: '/stock/$productId'
      path: '/stock/$productId'
      fullPath: '/stock/$productId'
      preLoaderRoute: typeof StockProductIdImport
      parentRoute: typeof rootRoute
    }
    '/stock/': {
      id: '/stock/'
      path: '/stock'
      fullPath: '/stock'
      preLoaderRoute: typeof StockIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cart': typeof CartRoute
  '/checkout': typeof CheckoutRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/landing/about': typeof LandingAboutRoute
  '/landing/contact': typeof LandingContactRoute
  '/landing/stock': typeof LandingStockRoute
  '/stock/$productId': typeof StockProductIdRoute
  '/stock': typeof StockIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cart': typeof CartRoute
  '/checkout': typeof CheckoutRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/landing/about': typeof LandingAboutRoute
  '/landing/contact': typeof LandingContactRoute
  '/landing/stock': typeof LandingStockRoute
  '/stock/$productId': typeof StockProductIdRoute
  '/stock': typeof StockIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/cart': typeof CartRoute
  '/checkout': typeof CheckoutRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/landing/about': typeof LandingAboutRoute
  '/landing/contact': typeof LandingContactRoute
  '/landing/stock': typeof LandingStockRoute
  '/stock/$productId': typeof StockProductIdRoute
  '/stock/': typeof StockIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/cart'
    | '/checkout'
    | '/auth/signin'
    | '/auth/signup'
    | '/landing/about'
    | '/landing/contact'
    | '/landing/stock'
    | '/stock/$productId'
    | '/stock'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/cart'
    | '/checkout'
    | '/auth/signin'
    | '/auth/signup'
    | '/landing/about'
    | '/landing/contact'
    | '/landing/stock'
    | '/stock/$productId'
    | '/stock'
  id:
    | '__root__'
    | '/'
    | '/cart'
    | '/checkout'
    | '/auth/signin'
    | '/auth/signup'
    | '/landing/about'
    | '/landing/contact'
    | '/landing/stock'
    | '/stock/$productId'
    | '/stock/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CartRoute: typeof CartRoute
  CheckoutRoute: typeof CheckoutRoute
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
  LandingAboutRoute: typeof LandingAboutRoute
  LandingContactRoute: typeof LandingContactRoute
  LandingStockRoute: typeof LandingStockRoute
  StockProductIdRoute: typeof StockProductIdRoute
  StockIndexRoute: typeof StockIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CartRoute: CartRoute,
  CheckoutRoute: CheckoutRoute,
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
  LandingAboutRoute: LandingAboutRoute,
  LandingContactRoute: LandingContactRoute,
  LandingStockRoute: LandingStockRoute,
  StockProductIdRoute: StockProductIdRoute,
  StockIndexRoute: StockIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/cart",
        "/checkout",
        "/auth/signin",
        "/auth/signup",
        "/landing/about",
        "/landing/contact",
        "/landing/stock",
        "/stock/$productId",
        "/stock/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/cart": {
      "filePath": "cart.tsx"
    },
    "/checkout": {
      "filePath": "checkout.tsx"
    },
    "/auth/signin": {
      "filePath": "auth/signin.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    },
    "/landing/about": {
      "filePath": "landing/about.tsx"
    },
    "/landing/contact": {
      "filePath": "landing/contact.tsx"
    },
    "/landing/stock": {
      "filePath": "landing/stock.tsx"
    },
    "/stock/$productId": {
      "filePath": "stock/$productId.tsx"
    },
    "/stock/": {
      "filePath": "stock/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
